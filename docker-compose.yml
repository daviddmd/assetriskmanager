version: '3.5'
services:
  app:
    build:
      context: .
      dockerfile: 'docker/php/Dockerfile'
    volumes:
      - php-files:/workdir
      - type: bind
        source: ./.env
        target: /workdir/.env
      - type: bind
        source: ./storage/logs
        target: /workdir/storage/logs
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - net
    depends_on:
      db:
        condition: service_healthy
    environment:
      TZ: '${TIMEZONE}'
  web:
    build:
      context: docker/nginx
      dockerfile: 'Dockerfile'
    volumes:
      - php-files:/workdir
    ports:
      - '${APP_PORT:-80}:80'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - net
    depends_on:
      - app
    environment:
      TZ: '${TIMEZONE}'
  db:
    image: 'mysql:8.0.31'
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      TZ: '${TIMEZONE}'
    volumes:
      - 'db:/var/lib/mysql'
    networks:
      - net
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
      retries: 10
      timeout: 30s

networks:
  net:
    driver: bridge
volumes:
  php-files:
    driver: local
  db:
    driver: local

